fio = 'Бобрышева Татьяна Сергеевна'
group = 'ЗИТ_22'

in_file = f'{fio} {group}_vvod.txt'
out_file = f'{fio} {group}_vivod.txt'

#
# matrix = [[2, 4.5, 16.4, -11.3], [1.4, -2.5, 8.4, -1.3], [-1.2, 24.5, -6.4, -17.3],
#           [-203, 14.5, 6.4, -13.8], [12, 34.5, -11.4, -4.3], [2.4, 4.35, -1.64, -156.3]]


def read_matrix_from_file(file):
    with open(file, 'r', encoding='utf-8') as f:
        return[list(map(float, i.split())) for i in f.readlines()]


def save_matrix_to_file(file, matrix):
    with open(file, 'w', encoding='utf-8') as f:
        for i in matrix:
            f.write(" ".join(map(str, i)))
            f.write('\n')

def get_max_in_colum(matrix, column_number, rows_count):
    """
    максимальное значение в столбце
    :param matrix: матрица
    :param column_number: номер столбца
    :param rows_count: кол-во строк в матрице
    :return:
    """
    max_val=matrix[0][column_number]
    for row_index in range(rows_count):
        if matrix[row_index][column_number] > max_val:
            max_val = matrix[row_index][column_number]
    return max_val


def get_max_in_row(matrix, row_number, columns_count):
    """
    максимальное значение в строке
    :param matrix: матрица
    :param row_number: номер строки
    :param columns_count: кол-во столбцов в матрице
    :return:
    """
    max_val=matrix[row_number][0]
    for column_index in range(columns_count):
        if matrix[row_number][column_index] > max_val:
            max_val = matrix[row_number][column_index]
    return max_val


m = read_matrix_from_file(in_file)
print(m)

columns_count=len(m[0])
rows_count = len(m)

# ищем максимальный элемент в каждом столбце
max_val = get_max_in_colum(m, 0, rows_count) #максимальное значение в столбце
max_col_index = 0# индекс солбца с максимальным значением
for col_number in range(1, columns_count):
    next_max_val = get_max_in_colum(m, col_number, rows_count)
    if next_max_val > max_val:
        max_val = next_max_val # запоминаем новое макс значение столбца
        max_col_index = col_number

# print("max_value", max_val)
# print("max_col_index", max_col_index)

# после данного цикла у нас определен номер столбца с максимальным значением. Его перемещаем на 1 позицию
if max_col_index > 0:
    for i in range(rows_count):
        m[i][0], m[i][max_col_index] = m[i][max_col_index], m[i][0]

# print(m)

# ищем максимальный элемент в каждой строке
max_val = get_max_in_row(m, 0, columns_count) #максимальное значение в столбце
max_row_index = 0# индекс строки с максимальным значением
for row_number in range(1, rows_count):
    next_max_val = get_max_in_row(m, row_number, columns_count)
    if next_max_val > max_val:
        max_val = next_max_val # запоминаем новое макс значение столбца
        max_row_index = row_number

# print("max_row_index", max_row_index)

# после данного цикла у нас определен номер строки с максимальным значением. Её перемещаем на 1 позицию
if max_row_index > 0:
    for i in range(columns_count):
        m[0][i], m[max_row_index][i] = m[max_row_index][i], m[0][i]

# print(m)


save_matrix_to_file(out_file, m)
print(f'Результирующая матрица записана в файл {out_file}')
